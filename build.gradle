buildscript {
    ext {
		springBootVersion = '2.0.2.RELEASE'
	}
    repositories {
        mavenLocal()
	    jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: "maven"
apply plugin: "jacoco"

bootJar {
    group    = "com.cloudcompilerr"
    baseName = 'cm-user-api'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

group    = "com.cloudcompilerr"
version =  '0.1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.projectlombok:lombok', { changing =true })
	compile('com.cloudcompilerr:cloudcompilerr-logger-v1:0.0.1-SNAPSHOT')
	compile('com.h2database:h2')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	testCompile('junit:junit:4.12') {
        exclude group: 'org.hamcrest'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

// create  a fat jar using the jar task from java plugin
/*jar {
	baseName = 'cm-user-api'
    manifest {
        attributes "Main-Class": "com.cloudcompilerr.development.UserApplication"
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}*/